{"version":3,"sources":["serviceWorker.ts","config.ts","auth/Auth.js","components/Callback.tsx","components/EditTodo.tsx","api/todos-api.ts","components/LogIn.tsx","components/NotFound.tsx","components/Todos.tsx","App.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiEndpoint","concat","authConfig","domain","clientId","callbackUrl","Auth","history","Object","classCallCheck","this","auth0","WebAuth","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","getAccessToken","getIdToken","renewSession","authorize","_this","parseHash","err","authResult","accessToken","idToken","console","log","setSession","replace","alert","error","localStorage","setItem","expiresAt","expiresIn","Date","getTime","_this2","checkSession","error_description","removeItem","return_to","origin","Callback","UploadState","react_default","a","createElement","Dimmer","active","Loader","content","getTodos","_x","_getTodos","apply","arguments","_callee","response","_regeneratorRuntime","wrap","_context","prev","next","Axios","get","headers","Content-Type","Authorization","sent","data","abrupt","items","stop","createTodo","_x2","_x3","_createTodo","_callee2","newTodo","_context2","post","JSON","stringify","item","patchTodo","_x4","_x5","_x6","_patchTodo","_callee3","todoId","updatedTodo","_context3","patch","deleteTodo","_x7","_x8","_deleteTodo","_callee4","_context4","delete","getUploadUrl","_x9","_x10","_getUploadUrl","_callee5","_context5","uploadUrl","t0","uploadFile","_x11","_x12","_uploadFile","_callee6","file","_context6","put","EditTodo","_React$PureComponent","_getPrototypeOf2","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","state","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","_ref","asyncToGenerator","EditTodo_regeneratorRuntime","mark","preventDefault","setUploadState","FetchingPresignedUrl","props","auth","params","UploadingFile","message","finish","inherits","createClass","key","value","react","Form","onSubmit","Field","type","accept","placeholder","onChange","renderButton","Button","loading","React","LogIn","onLogin","onClick","size","color","NotFound","Todos","todos","newTodoName","loadingTodos","handleNameChange","onEditButtonClick","push","onTodoCreate","Todos_regeneratorRuntime","dueDate","calculateDueDate","name","toConsumableArray","onTodoDelete","_ref2","filter","todo","onTodoCheck","_ref3","pos","done","update","defineProperty","$set","_componentDidMount","Header","as","renderCreateTodoInput","renderTodos","Grid","Row","Column","width","Input","action","labelPosition","icon","fluid","actionPosition","Divider","renderLoading","renderTodosList","indeterminate","inline","padded","map","verticalAlign","Checkbox","checked","floated","Icon","attachmentUrl","Image","src","wrapped","date","setDate","getDate","dateFormat","App","handleLogin","assertThisInitialized","handleLogout","Segment","style","padding","vertical","container","stackable","react_router","generateMenu","generateCurrentPage","Menu","Item","react_router_dom","to","position","logInLogOutButton","path","exact","render","Todos_Todos","assign","EditTodo_EditTodo","component","LogIn_LogIn","Component","createBrowserHistory","ReactDOM","test","hash","components_Callback","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4034d35.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const apiId = 'vo0z3kaxxh';\nexport const apiEndpoint = `https://${apiId}.execute-api.us-east-1.amazonaws.com/dev`\n\nexport const authConfig = {\n  domain: 'dev-35jog8iq.us.auth0.com',\n  clientId: 'dQESnB8yssr6ET40IPHqeN2oDCp84d54',\n  callbackUrl: 'http://localhost:3000/callback'\n};\n","import auth0 from 'auth0-js';\nimport { authConfig } from '../config';\n\nexport default class Auth {\n  accessToken;\n  idToken;\n  expiresAt;\n\n  auth0 = new auth0.WebAuth({\n    domain: authConfig.domain,\n    clientID: authConfig.clientId,\n    redirectUri: authConfig.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor(history) {\n    this.history = history\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        console.log('Access token: ', authResult.accessToken)\n        console.log('id token: ', authResult.idToken)\n        this.setSession(authResult);\n      } else if (err) {\n        this.history.replace('/');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  renewSession() {\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    this.history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nfunction Callback() {\n  return (\n    <Dimmer active>\n      <Loader content=\"Loading\" />\n    </Dimmer>\n  )\n}\n\nexport default Callback\n","import * as React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport Auth from '../auth/Auth'\nimport { getUploadUrl, uploadFile } from '../api/todos-api'\n\nenum UploadState {\n  NoUpload,\n  FetchingPresignedUrl,\n  UploadingFile,\n}\n\ninterface EditTodoProps {\n  match: {\n    params: {\n      todoId: string\n    }\n  }\n  auth: Auth\n}\n\ninterface EditTodoState {\n  file: any\n  uploadState: UploadState\n}\n\nexport class EditTodo extends React.PureComponent<\n  EditTodoProps,\n  EditTodoState\n> {\n  state: EditTodoState = {\n    file: undefined,\n    uploadState: UploadState.NoUpload\n  }\n\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files\n    if (!files) return\n\n    this.setState({\n      file: files[0]\n    })\n  }\n\n  handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n\n    try {\n      if (!this.state.file) {\n        alert('File should be selected')\n        return\n      }\n\n      this.setUploadState(UploadState.FetchingPresignedUrl)\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.todoId)\n\n      this.setUploadState(UploadState.UploadingFile)\n      await uploadFile(uploadUrl, this.state.file)\n\n      alert('File was uploaded!')\n    } catch (e) {\n      alert('Could not upload a file: ' + e.message)\n    } finally {\n      this.setUploadState(UploadState.NoUpload)\n    }\n  }\n\n  setUploadState(uploadState: UploadState) {\n    this.setState({\n      uploadState\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Upload new image</h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Field>\n            <label>File</label>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              placeholder=\"Image to upload\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Field>\n\n          {this.renderButton()}\n        </Form>\n      </div>\n    )\n  }\n\n  renderButton() {\n\n    return (\n      <div>\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\n        <Button\n          loading={this.state.uploadState !== UploadState.NoUpload}\n          type=\"submit\"\n        >\n          Upload\n        </Button>\n      </div>\n    )\n  }\n}\n","import { apiEndpoint } from '../config'\nimport { Todo } from '../types/Todo';\nimport { CreateTodoRequest } from '../types/CreateTodoRequest';\nimport Axios from 'axios'\nimport { UpdateTodoRequest } from '../types/UpdateTodoRequest';\n\nexport async function getTodos(idToken: string): Promise<Todo[]> {\n  console.log('Fetching todos')\n\n  const response = await Axios.get(`${apiEndpoint}/todos`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    },\n  })\n  console.log('Todos:', response.data)\n  return response.data.items\n}\n\nexport async function createTodo(\n  idToken: string,\n  newTodo: CreateTodoRequest\n): Promise<Todo> {\n  const response = await Axios.post(`${apiEndpoint}/todos`,  JSON.stringify(newTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n  return response.data.item\n}\n\nexport async function patchTodo(\n  idToken: string,\n  todoId: string,\n  updatedTodo: UpdateTodoRequest\n): Promise<void> {\n  await Axios.patch(`${apiEndpoint}/todos/${todoId}`, JSON.stringify(updatedTodo), {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function deleteTodo(\n  idToken: string,\n  todoId: string\n): Promise<void> {\n  await Axios.delete(`${apiEndpoint}/todos/${todoId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${idToken}`\n    }\n  })\n}\n\nexport async function getUploadUrl(\n  idToken: string,\n  todoId: string\n): Promise<string> {\n  try {\n    const response = await Axios.post(`${apiEndpoint}/todos/${todoId}/attachment`, '', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`\n        }\n      })\n    return response.data.uploadUrl\n  }\ncatch(err){\nconsole.error('get upload url', err)\n}\n  return ''\n}\n\nexport async function uploadFile(uploadUrl: string, file: Buffer): Promise<void> {\n  try {\n  await Axios.put(uploadUrl, file)\n  } catch(err){\n      console.error(\" Upload file\", err)\n}\n    \n}\n","import * as React from 'react'\nimport Auth from '../auth/Auth'\nimport { Button } from 'semantic-ui-react'\n\ninterface LogInProps {\n  auth: Auth\n}\n\ninterface LogInState {}\n\nexport class LogIn extends React.PureComponent<LogInProps, LogInState> {\n  onLogin = () => {\n    this.props.auth.login()\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Please log in</h1>\n\n        <Button onClick={this.onLogin} size=\"huge\" color=\"olive\">\n          Log in\n        </Button>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\n\ninterface NotFoundProps {\n}\n\ninterface NotFoundState {\n}\n\nexport class NotFound extends React.PureComponent<NotFoundProps, NotFoundState> {\n  render() {\n    return <h1>Not Found</h1>\n  }\n}\n","import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId != todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n    } catch {\n      alert('Todo update failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","import React, { Component } from 'react'\nimport { Link, Route, Router, Switch } from 'react-router-dom'\nimport { Grid, Menu, Segment } from 'semantic-ui-react'\n\nimport Auth from './auth/Auth'\nimport { EditTodo } from './components/EditTodo'\nimport { LogIn } from './components/LogIn'\nimport { NotFound } from './components/NotFound'\nimport { Todos } from './components/Todos'\n\nexport interface AppProps {}\n\nexport interface AppProps {\n  auth: Auth\n  history: any\n}\n\nexport interface AppState {}\n\nexport default class App extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props)\n\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  handleLogin() {\n    this.props.auth.login()\n  }\n\n  handleLogout() {\n    this.props.auth.logout()\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment style={{ padding: '8em 0em' }} vertical>\n          <Grid container stackable verticalAlign=\"middle\">\n            <Grid.Row>\n              <Grid.Column width={16}>\n                <Router history={this.props.history}>\n                  {this.generateMenu()}\n\n                  {this.generateCurrentPage()}\n                </Router>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      </div>\n    )\n  }\n\n  generateMenu() {\n    return (\n      <Menu>\n        <Menu.Item name=\"home\">\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n\n        <Menu.Menu position=\"right\">{this.logInLogOutButton()}</Menu.Menu>\n      </Menu>\n    )\n  }\n\n  logInLogOutButton() {\n    if (this.props.auth.isAuthenticated()) {\n      return (\n        <Menu.Item name=\"logout\" onClick={this.handleLogout}>\n          Log Out\n        </Menu.Item>\n      )\n    } else {\n      return (\n        <Menu.Item name=\"login\" onClick={this.handleLogin}>\n          Log In\n        </Menu.Item>\n      )\n    }\n  }\n\n  generateCurrentPage() {\n    if (!this.props.auth.isAuthenticated()) {\n      return <LogIn auth={this.props.auth} />\n    }\n\n    return (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={props => {\n            return <Todos {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route\n          path=\"/todos/:todoId/edit\"\n          exact\n          render={props => {\n            return <EditTodo {...props} auth={this.props.auth} />\n          }}\n        />\n\n        <Route component={NotFound} />\n      </Switch>\n    )\n  }\n}\n","import React from 'react'\nimport Auth from './auth/Auth'\nimport { Router, Route } from 'react-router-dom'\nimport Callback from './components/Callback'\nimport { createBrowserHistory } from 'history'\nimport App from './App'\nconst history = createBrowserHistory()\n\nconst auth = new Auth(history)\n\nconst handleAuthentication = (props: any) => {\n  const location = props.location\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication()\n  }\n}\n\nexport const makeAuthRouting = () => {\n  return (\n    <Router history={history}>\n      <div>\n        <Route\n          path=\"/callback\"\n          render={props => {\n            handleAuthentication(props)\n            return <Callback />\n          }}\n        />\n        <Route\n          render={props => {\n            return <App auth={auth} {...props} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}